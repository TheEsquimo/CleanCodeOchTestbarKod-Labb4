// <auto-generated />
using System;
using MagicTheVotingAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MagicTheVotingAPI.Migrations
{
    [DbContext(typeof(MagicTheVotingAPIContext))]
    [Migration("20210105144949_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MagicTheVotingAPI.MagicCard", b =>
                {
                    b.Property<int>("MultiverseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("MultiverseId");

                    b.ToTable("MagicCard");
                });

            modelBuilder.Entity("MagicTheVotingAPI.MagicVotePair", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CardAMultiverseId")
                        .HasColumnType("int");

                    b.Property<int>("CardAVotes")
                        .HasColumnType("int");

                    b.Property<int?>("CardBMultiverseId")
                        .HasColumnType("int");

                    b.Property<int>("CardBVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardAMultiverseId");

                    b.HasIndex("CardBMultiverseId");

                    b.ToTable("MagicVotePair");
                });

            modelBuilder.Entity("MagicTheVotingAPI.MagicVotePair", b =>
                {
                    b.HasOne("MagicTheVotingAPI.MagicCard", "CardA")
                        .WithMany()
                        .HasForeignKey("CardAMultiverseId");

                    b.HasOne("MagicTheVotingAPI.MagicCard", "CardB")
                        .WithMany()
                        .HasForeignKey("CardBMultiverseId");
                });
#pragma warning restore 612, 618
        }
    }
}
